<?xml version="1.0"?>
<!--
  ~ Copyright (C) 2018-2020 Niels Basjes
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>kryomapbugreport</artifactId>
  <packaging>jar</packaging>
  <groupId>nl.basjes.collections</groupId>
  <version>2.0-SNAPSHOT</version>

  <name>Kryo Map bug report</name>
  <description>A bug report reproduction for a problem with Kryo.</description>

  <properties>
    <target.java.version>1.8</target.java.version>
    <target.java.release>8</target.java.release>

    <!-- In order for everything to work correctly we need at least this version of maven. -->
    <maven.minimal.version>3.6.3</maven.minimal.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.outputEncoding>UTF-8</project.build.outputEncoding>

    <!-- ============================================== -->

    <slf4j.version>1.7.30</slf4j.version>

    <junit5.version>5.6.2</junit5.version>
    <hamcrest-core.version>2.2</hamcrest-core.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit5.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.esotericsoftware</groupId>
      <artifactId>kryo</artifactId>
<!--      <version>4.0.2</version>-->
      <version>5.0.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

  </dependencies>

  <build>
    <defaultGoal>clean package</defaultGoal>

    <pluginManagement>
      <plugins>
        <plugin><artifactId>maven-clean-plugin</artifactId>     <version>3.1.0</version></plugin>
        <plugin><artifactId>maven-install-plugin</artifactId>   <version>2.5.2</version></plugin>
        <plugin><artifactId>maven-jar-plugin</artifactId>       <version>3.2.0</version></plugin>
        <plugin><artifactId>maven-resources-plugin</artifactId> <version>3.1.0</version></plugin>
        <plugin><artifactId>maven-site-plugin</artifactId>      <version>3.8.2</version></plugin>
        <plugin><artifactId>maven-compiler-plugin</artifactId>  <version>3.8.1</version></plugin>
        <plugin><artifactId>maven-surefire-plugin</artifactId>  <version>2.22.2</version></plugin>
        <plugin><artifactId>maven-deploy-plugin</artifactId>    <version>2.8.2</version></plugin>
        <plugin><artifactId>maven-enforcer-plugin</artifactId>  <version>1.4.1</version></plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <!-- Based upon https://maven.apache.org/plugins/maven-compiler-plugin/examples/module-info.html-->
        <executions>
          <execution>
            <id>Compile for Java 9 to build correct module-info</id>
            <configuration>
              <!-- compile everything to ensure module-info contains right entries -->
              <release>9</release>
            </configuration>
          </execution>
          <execution>
            <id>Compile for Java 8 to build classes correctly</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <!-- recompile everything for target VM except the module-info.java -->
            <configuration>
              <excludes>
                <exclude>module-info.java</exclude>
              </excludes>
              <release>${target.java.release}</release>
              <compilerArgument>
                -Xlint:unchecked
              </compilerArgument>
              <showWarnings>true</showWarnings>
              <showDeprecation>true</showDeprecation>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <!-- This here is to lie to plugins like javadoc -->
          <release>9</release>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4.1</version>
        <executions>
          <execution>
            <id>Enforce Maven ${maven.minimal.version} or newer</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>[${maven.minimal.version},)</version>
                  <message>You must use Maven version ${maven.minimal.version} or newer to build this project.</message>
                  <!-- Reasons for this need:                            -->
                  <!-- https://issues.apache.org/jira/browse/MDEPLOY-221 -->
                  <!-- https://issues.apache.org/jira/browse/MNG-6581    -->
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>

          <execution>
            <id>Enforce JDK 11 or newer</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>

              <requireJavaVersion>
                  <version>[11,)</version><!-- Yauaa requires JDK 11 or newer to build, the result will run on JRE 8 -->
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>

          <execution>
            <id>Enforce Dependency convergence</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <dependencyConvergence/>
              </rules>
            </configuration>
          </execution>

        </executions>
      </plugin>

    </plugins>
  </build>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Niels Basjes</name>
      <email>niels@basjes.nl</email>
      <roles>
        <role>Architect</role>
        <role>Developer</role>
      </roles>
      <timezone>Europe/Amsterdam</timezone>
    </developer>
  </developers>
</project>
